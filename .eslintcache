[{"D:\\Curd_reactjs\\curd\\src\\index.js":"1","D:\\Curd_reactjs\\curd\\src\\App.js":"2","D:\\Curd_reactjs\\curd\\src\\reportWebVitals.js":"3","D:\\Curd_reactjs\\curd\\src\\Component\\Home.js":"4","D:\\Curd_reactjs\\curd\\src\\Layout\\Navbar.js":"5","D:\\Curd_reactjs\\curd\\src\\Routing\\Main.js":"6","D:\\Curd_reactjs\\curd\\src\\Component\\Contact.js":"7","D:\\Curd_reactjs\\curd\\src\\Component\\About.js":"8","D:\\Curd_reactjs\\curd\\src\\Component\\Notfound.js":"9","D:\\Curd_reactjs\\curd\\src\\Users\\Adduser.js":"10","D:\\Curd_reactjs\\curd\\src\\Users\\Edituser.js":"11","D:\\Curd_reactjs\\curd\\src\\Users\\Viewuser.js":"12","D:\\Curd_reactjs\\curd\\src\\CustomHooks\\useForm.js":"13","D:\\Curd_reactjs\\curd\\src\\CustomHooks\\Validation.js":"14"},{"size":630,"mtime":1611057879549,"results":"15","hashOfConfig":"16"},{"size":207,"mtime":1611058142864,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2576,"mtime":1611235714671,"results":"19","hashOfConfig":"16"},{"size":1179,"mtime":1611062732906,"results":"20","hashOfConfig":"16"},{"size":929,"mtime":1611207748911,"results":"21","hashOfConfig":"16"},{"size":211,"mtime":1611057346092,"results":"22","hashOfConfig":"16"},{"size":2385,"mtime":1611220357183,"results":"23","hashOfConfig":"16"},{"size":143,"mtime":1611058806500,"results":"24","hashOfConfig":"16"},{"size":2783,"mtime":1611225926313,"results":"25","hashOfConfig":"16"},{"size":2270,"mtime":1611207435982,"results":"26","hashOfConfig":"16"},{"size":902,"mtime":1611135636099,"results":"27","hashOfConfig":"16"},{"size":636,"mtime":1611224692411,"results":"28","hashOfConfig":"16"},{"size":1081,"mtime":1611223916277,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"joxulb",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"D:\\Curd_reactjs\\curd\\src\\index.js",[],["67","68"],"D:\\Curd_reactjs\\curd\\src\\App.js",[],"D:\\Curd_reactjs\\curd\\src\\reportWebVitals.js",[],"D:\\Curd_reactjs\\curd\\src\\Component\\Home.js",["69","70","71"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Home = () => {\r\n\tconst intailSearch = {\r\n\t\tname: '',\r\n\t};\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst [searchUser, newSearchUser] = useState(intailSearch);\r\n\tconst [message, setMessage] = useState('');\r\n\tuseEffect(() => {\r\n\t\tconsole.log('this is homepage');\r\n\t\tloadUser();\r\n\t}, []);\r\n\tconst loadUser = async () => {\r\n\t\tconst result = await axios.get('http://localhost:3000/posts');\r\n\t\tsetUsers(result.data.reverse());\r\n\t};\r\n\tconst deleteUser = async (id) => {\r\n\t\tconsole.log(id);\r\n\t\tawait axios.delete(`http://localhost:3000/posts/${id}`);\r\n\t\tloadUser();\r\n\t};\r\n\tconst searchNewUsers = (e) => {\r\n\t\tconst searchResp = e.target.value.toLowerCase();\r\n\t\tlet resultData = [];\r\n\r\n\t\tif (searchResp.length > 0) {\r\n\t\t\tusers.filter((e) => {\r\n\t\t\t\tif (e.name.toLowerCase().includes(searchResp)) {\r\n\t\t\t\t\tresultData.push(e);\r\n\t\t\t\t}\r\n\t\t\t\tif (!searchResp) {\r\n\t\t\t\t\tmessage = 'No data is found';\r\n\t\t\t\t\t// setMessage(errorMessage);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tloadUser();\r\n\t\t}\r\n\r\n\t\tnewSearchUser({ ...searchUser, [e.target.name]: e.target.value });\r\n\t\tsetUsers(resultData);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"py-4\">\r\n\t\t\t\t<h2>Home Component</h2>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"please search\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tvalue={searchUser.name}\r\n\t\t\t\t\tonChange={searchNewUsers}\r\n\t\t\t\t/>\r\n\t\t\t\t<table className=\"table border shadow\">\r\n\t\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th scope=\"col\">#</th>\r\n\t\t\t\t\t\t\t<th scope=\"col\">First</th>\r\n\t\t\t\t\t\t\t<th scope=\"col\">Last</th>\r\n\t\t\t\t\t\t\t<th scope=\"col\">Emial</th>\r\n\t\t\t\t\t\t\t<th scope=\"col\">Mobile</th>\r\n\t\t\t\t\t\t\t<th scope=\"col\">Action</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{users.map((user, i) => (\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t\t<td>{i + 1}</td>\r\n\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t<td>{user.userName}</td>\r\n\t\t\t\t\t\t\t\t<td>{user.email}</td>\r\n\t\t\t\t\t\t\t\t<td>{user.mobile}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<Link className=\"btn btn-primary m-2\" to={`/view/${user.id}`}>\r\n\t\t\t\t\t\t\t\t\t\tView\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success m-2\"\r\n\t\t\t\t\t\t\t\t\t\tto={`/adduser/${user.id}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\t\tto=\"\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => deleteUser(user.id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<h3>{message}</h3>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Home;\r\n","D:\\Curd_reactjs\\curd\\src\\Layout\\Navbar.js",["72"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-primary\">\r\n\t\t\t<a className=\"navbar-brand\" href=\"#\">\r\n\t\t\t\tReact Curd\r\n\t\t\t</a>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"navbar-toggler\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\tdata-target=\"#navbarNav\"\r\n\t\t\t\taria-controls=\"navbarNav\"\r\n\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t</button>\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\t\t\t\t<ul className=\"navbar-nav\">\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/\">\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/about\">\r\n\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<NavLink className=\"nav-link\" exact to=\"/contact\">\r\n\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<Link className=\"btn btn-outline-light\" to=\"/adduser\">\r\n\t\t\t\t\tAddUser\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\nexport default Navbar;\r\n","D:\\Curd_reactjs\\curd\\src\\Routing\\Main.js",["73"],"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport About from '../Component/About';\r\nimport Contact from '../Component/Contact';\r\nimport Home from '../Component/Home';\r\nimport Notfound from '../Component/Notfound';\r\nimport EditUser from '../Users/Edituser';\r\nimport AddUser from '../Users/Adduser';\r\nimport Viewuser from '../Users/Viewuser';\r\nconst Main = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t<Route exact path=\"/about\" component={About} />\r\n\t\t\t\t<Route exact path=\"/contact\" component={Contact} />\r\n\t\t\t\t<Route exact path=\"/adduser\" component={AddUser} />\r\n\t\t\t\t<Route exact path=\"/adduser/:id\" component={AddUser} />\r\n\t\t\t\t{/* <Route exact path=\"/edituser/:id\" component={EditUser} /> */}\r\n\t\t\t\t<Route exact path=\"/view/:id\" component={Viewuser} />\r\n\t\t\t\t<Route component={Notfound} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Main;\r\n","D:\\Curd_reactjs\\curd\\src\\Component\\Contact.js",[],"D:\\Curd_reactjs\\curd\\src\\Component\\About.js",[],"D:\\Curd_reactjs\\curd\\src\\Component\\Notfound.js",[],"D:\\Curd_reactjs\\curd\\src\\Users\\Adduser.js",["74"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nconst AddUser = () => {\r\n\tconst history = useHistory();\r\n\r\n\tconst { id } = useParams();\r\n\r\n\tconst intialValue = {\r\n\t\tname: '',\r\n\t\tuserName: '',\r\n\t\temail: '',\r\n\t\tmobile: '',\r\n\t};\r\n\tconst [userValue, setUserValue] = useState(intialValue);\r\n\r\n\tconst changeUserValues = (e) => {\r\n\t\tsetUserValue({ ...userValue, [e.target.name]: e.target.value });\r\n\t};\r\n\tconst userDetails = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tawait axios.post('http://localhost:3000/posts', userValue);\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\t// ===========editUser start=============\r\n\tconst updateUser = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tawait axios.put(`http://localhost:3000/posts/${id}`, userValue);\r\n\t\thistory.push('/');\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tloadUserData();\r\n\t}, []);\r\n\tconst loadUserData = async () => {\r\n\t\tconst resultdata = await axios.get(`http://localhost:3000/posts/${id}`);\r\n\t\tsetUserValue(resultdata.data);\r\n\t\tconsole.log(resultdata, '===============resultDatabasedonid=============');\r\n\t};\r\n\t// ===========editUser end=============\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h2>Adduser</h2>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<form onSubmit={userDetails} autoComplete=\"off\">\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Name:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"enter Name\"\r\n\t\t\t\t\t\t\tvalue={userValue.name}\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tonChange={(e) => changeUserValues(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>UserName:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"enter UserName\"\r\n\t\t\t\t\t\t\tvalue={userValue.userName}\r\n\t\t\t\t\t\t\tname=\"userName\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tonChange={(e) => changeUserValues(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Email:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"enter Email\"\r\n\t\t\t\t\t\t\tvalue={userValue.email}\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tonChange={(e) => changeUserValues(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Mobile:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"enter Mobile\"\r\n\t\t\t\t\t\t\tvalue={userValue.mobile}\r\n\t\t\t\t\t\t\tname=\"mobile\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tonChange={(e) => changeUserValues(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t{!id ? (\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\">AddUser</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button className=\"btn btn-info\" onClick={updateUser}>\r\n\t\t\t\t\t\t\t\tupdateUser\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default AddUser;\r\n","D:\\Curd_reactjs\\curd\\src\\Users\\Edituser.js",["75"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nconst EditUser = () => {\r\n\tconst history = useHistory();\r\n\tconst { id } = useParams();\r\n\tconst intialValue = {\r\n\t\tname: '',\r\n\t\tuserName: '',\r\n\t\temail: '',\r\n\t\tmobile: '',\r\n\t};\r\n\tconst [userValue, setUserValue] = useState(intialValue);\r\n\tuseEffect(() => {\r\n\t\tloadUserData();\r\n\t}, []);\r\n\tconst changeUserValues = (e) => {\r\n\t\tsetUserValue({ ...userValue, [e.target.name]: e.target.value });\r\n\t};\r\n\tconst userDetails = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tawait axios.put(`http://localhost:3000/posts/${id}`, userValue);\r\n\t\thistory.push('/');\r\n\t};\r\n\tconst loadUserData = async () => {\r\n\t\tconst resultdata = await axios.get(`http://localhost:3000/posts/${id}`);\r\n\t\tsetUserValue(resultdata.data);\r\n\t\tconsole.log(resultdata, '===============resultDatabasedonid=============');\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h2>Adduser</h2>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<form onSubmit={userDetails} autoComplete=\"off\">\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Name:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"enter Name\"\r\n\t\t\t\t\t\t\tvalue={userValue.name}\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tonChange={(e) => changeUserValues(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>UserName:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"enter UserName\"\r\n\t\t\t\t\t\t\tvalue={userValue.userName}\r\n\t\t\t\t\t\t\tname=\"userName\"\r\n\t\t\t\t\t\t\tonChange={(e) => changeUserValues(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Email:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"enter Email\"\r\n\t\t\t\t\t\t\tvalue={userValue.email}\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tonChange={(e) => changeUserValues(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Mobile:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"enter Mobile\"\r\n\t\t\t\t\t\t\tvalue={userValue.mobile}\r\n\t\t\t\t\t\t\tname=\"mobile\"\r\n\t\t\t\t\t\t\tonChange={(e) => changeUserValues(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\">UpdateUser</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default EditUser;\r\n","D:\\Curd_reactjs\\curd\\src\\Users\\Viewuser.js",["76"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst Viewuser = () => {\r\n\tconst { id } = useParams();\r\n\tconst intialViewData = {\r\n\t\tname: '',\r\n\t\tuserName: '',\r\n\t\temail: '',\r\n\t\tmobile: '',\r\n\t};\r\n\tconst [viewUser, setviewUser] = useState(intialViewData);\r\n\r\n\tconst viewUserInformation = async () => {\r\n\t\tconst viewdata = await axios.get(`http://localhost:3000/posts/${id}`);\r\n\t\tconst resultView = viewdata.data;\r\n\t\tsetviewUser(resultView);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tviewUserInformation();\r\n\t}, []);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>Userdetails Info</h4>\r\n\t\t\t{\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Name:{viewUser.name}</li>\r\n\t\t\t\t\t<li>userName:{viewUser.userName}</li>\r\n\t\t\t\t\t<li>Name:{viewUser.name}</li>\r\n\t\t\t\t\t<li>email:{viewUser.email}</li>\r\n\t\t\t\t\t<li>email:{viewUser.mobile}</li>\r\n\t\t\t\t</ul>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Viewuser;\r\n","D:\\Curd_reactjs\\curd\\src\\CustomHooks\\useForm.js",["77"],"import { useState, useEffect } from 'react';\r\n\r\nconst UserForm = (Validation) => {\r\n\tconst intialUserValue = {\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tmobile: '',\r\n\t\tpassword: '',\r\n\t\tconfirmPassword: '',\r\n\t};\r\n\tconst [values, setValues] = useState(intialUserValue);\r\n\tconst [error, setError] = useState({});\r\n\r\n\tconst handleChangeValue = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetValues({ ...values, [name]: value });\r\n\t};\r\n\tconst handelSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tsetError(Validation(values));\r\n\t\tconsole.log(values);\r\n\t};\r\n\treturn { handleChangeValue, values, handelSubmit, error };\r\n};\r\n\r\nexport default UserForm;\r\n","D:\\Curd_reactjs\\curd\\src\\CustomHooks\\Validation.js",["78"],"const Validation = (inputValidated) => {\r\n\tlet errors = {};\r\n\t///useName\r\n\tif (!inputValidated.name) {\r\n\t\terrors.name = 'UserName is required';\r\n\t}\r\n\t// Emial\r\n\tif (!inputValidated.email) {\r\n\t\terrors.email = \"Please enter Email'Id\";\r\n\t} else if (\r\n\t\t!/^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$/i.test(inputValidated.email)\r\n\t) {\r\n\t\terrors.email = 'Please enter valid Id';\r\n\t}\r\n\t// Mobile\r\n\tif (!inputValidated.mobile) {\r\n\t\terrors.mobile = 'Please enter Mobilenumber';\r\n\t} else if (!/^[7-9][0-9]{9}$/.test(inputValidated.mobile)) {\r\n\t\terrors.mobile = 'Please enter valid number';\r\n\t}\r\n\t//Password\r\n\tif (!inputValidated.password) {\r\n\t\terrors.password = 'Please enter Password';\r\n\t} else if (inputValidated.password.length < 6) {\r\n\t\terrors.password = 'Password must be 6 char';\r\n\t}\r\n\t//confirm Password\r\n\tif (!inputValidated.confirmPassword) {\r\n\t\terrors.confirmPassword = 'Please enter confirm password';\r\n\t} else if (inputValidated.confirmPassword != inputValidated.password) {\r\n\t\terrors.confirmPassword = 'Password is not match';\r\n\t}\r\n\treturn errors;\r\n};\r\nexport default Validation;\r\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":11,"column":18,"nodeType":"85","messageId":"86","endLine":11,"endColumn":28},{"ruleId":"87","severity":1,"message":"88","line":30,"column":21,"nodeType":"89","messageId":"90","endLine":30,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":35,"column":6,"nodeType":"85","messageId":"93","endLine":35,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":6,"column":4,"nodeType":"96","endLine":6,"endColumn":41},{"ruleId":"83","severity":1,"message":"97","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":34,"column":5,"nodeType":"100","endLine":34,"endColumn":7,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"99","line":16,"column":5,"nodeType":"100","endLine":16,"endColumn":7,"suggestions":"102"},{"ruleId":"98","severity":1,"message":"103","line":21,"column":5,"nodeType":"100","endLine":21,"endColumn":7,"suggestions":"104"},{"ruleId":"83","severity":1,"message":"105","line":1,"column":20,"nodeType":"85","messageId":"86","endLine":1,"endColumn":29},{"ruleId":"106","severity":1,"message":"107","line":30,"column":44,"nodeType":"108","messageId":"109","endLine":30,"endColumn":46},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-const-assign","'message' is constant.","const","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'EditUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserData'. Either include it or remove the dependency array.","ArrayExpression",["112"],["113"],"React Hook useEffect has a missing dependency: 'viewUserInformation'. Either include it or remove the dependency array.",["114"],"'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [loadUserData]",{"range":"120","text":"121"},{"range":"122","text":"121"},"Update the dependencies array to be: [viewUserInformation]",{"range":"123","text":"124"},[882,884],"[loadUserData]",[418,420],[575,577],"[viewUserInformation]"]